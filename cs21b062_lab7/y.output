Grammar

    0 $accept: slist $end

    1 $@1: ε

    2 slist: stmt SEMICOLON $@1 slist

    3 $@2: ε

    4 slist: error $@2 SEMICOLON slist
    5      | ε

    6 stmt: variable ASSIGN additiveexpression

    7 variable: IDENTIFIER
    8         | LPAREN variable RPAREN

    9 additiveexpression: multiplicativeexpression
   10                   | additiveexpression ADD multiplicativeexpression
   11                   | additiveexpression SUB multiplicativeexpression

   12 multiplicativeexpression: unaryexpression
   13                         | multiplicativeexpression MUL unaryexpression
   14                         | multiplicativeexpression DIV unaryexpression

   15 unaryexpression: postfixexpression
   16                | INC unaryexpression
   17                | DEC unaryexpression
   18                | ADD unaryexpression
   19                | SUB unaryexpression

   20 postfixexpression: primaryexpression
   21                  | postfixexpression INC
   22                  | postfixexpression DEC

   23 primaryexpression: constant
   24                  | IDENTIFIER
   25                  | LPAREN additiveexpression RPAREN

   26 constant: INTEGER


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4
    ADD (258) 10 18
    SUB (259) 11 19
    MUL (260) 13
    DIV (261) 14
    INC (262) 16 21
    DEC (263) 17 22
    ASSIGN (264) 6
    LPAREN (265) 8 25
    RPAREN (266) 8 25
    SEMICOLON (267) 2 4
    INTEGER <ival> (268) 26
    IDENTIFIER <lexeme> (269) 7 24


Nonterminals, with rules where they appear

    $accept (15)
        on left: 0
    slist <node> (16)
        on left: 2 4 5
        on right: 0 2 4
    $@1 (17)
        on left: 1
        on right: 2
    $@2 (18)
        on left: 3
        on right: 4
    stmt <node> (19)
        on left: 6
        on right: 2
    variable <node> (20)
        on left: 7 8
        on right: 6 8
    additiveexpression <node> (21)
        on left: 9 10 11
        on right: 6 10 11 25
    multiplicativeexpression <node> (22)
        on left: 12 13 14
        on right: 9 10 11 13 14
    unaryexpression <node> (23)
        on left: 15 16 17 18 19
        on right: 12 13 14 16 17 18 19
    postfixexpression <node> (24)
        on left: 20 21 22
        on right: 15 21 22
    primaryexpression <node> (25)
        on left: 23 24 25
        on right: 20
    constant <node> (26)
        on left: 26
        on right: 23


State 0

    0 $accept: • slist $end

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    $end  reduce using rule 5 (slist)

    slist     go to state 4
    stmt      go to state 5
    variable  go to state 6


State 1

    4 slist: error • $@2 SEMICOLON slist

    $default  reduce using rule 3 ($@2)

    $@2  go to state 7


State 2

    8 variable: LPAREN • variable RPAREN

    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    variable  go to state 8


State 3

    7 variable: IDENTIFIER •

    $default  reduce using rule 7 (variable)


State 4

    0 $accept: slist • $end

    $end  shift, and go to state 9


State 5

    2 slist: stmt • SEMICOLON $@1 slist

    SEMICOLON  shift, and go to state 10


State 6

    6 stmt: variable • ASSIGN additiveexpression

    ASSIGN  shift, and go to state 11


State 7

    4 slist: error $@2 • SEMICOLON slist

    SEMICOLON  shift, and go to state 12


State 8

    8 variable: LPAREN variable • RPAREN

    RPAREN  shift, and go to state 13


State 9

    0 $accept: slist $end •

    $default  accept


State 10

    2 slist: stmt SEMICOLON • $@1 slist

    $default  reduce using rule 1 ($@1)

    $@1  go to state 14


State 11

    6 stmt: variable ASSIGN • additiveexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    additiveexpression        go to state 22
    multiplicativeexpression  go to state 23
    unaryexpression           go to state 24
    postfixexpression         go to state 25
    primaryexpression         go to state 26
    constant                  go to state 27


State 12

    4 slist: error $@2 SEMICOLON • slist

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    $end  reduce using rule 5 (slist)

    slist     go to state 28
    stmt      go to state 5
    variable  go to state 6


State 13

    8 variable: LPAREN variable RPAREN •

    $default  reduce using rule 8 (variable)


State 14

    2 slist: stmt SEMICOLON $@1 • slist

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 3

    $end  reduce using rule 5 (slist)

    slist     go to state 29
    stmt      go to state 5
    variable  go to state 6


State 15

   18 unaryexpression: ADD • unaryexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    unaryexpression    go to state 30
    postfixexpression  go to state 25
    primaryexpression  go to state 26
    constant           go to state 27


State 16

   19 unaryexpression: SUB • unaryexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    unaryexpression    go to state 31
    postfixexpression  go to state 25
    primaryexpression  go to state 26
    constant           go to state 27


State 17

   16 unaryexpression: INC • unaryexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    unaryexpression    go to state 32
    postfixexpression  go to state 25
    primaryexpression  go to state 26
    constant           go to state 27


State 18

   17 unaryexpression: DEC • unaryexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    unaryexpression    go to state 33
    postfixexpression  go to state 25
    primaryexpression  go to state 26
    constant           go to state 27


State 19

   25 primaryexpression: LPAREN • additiveexpression RPAREN

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    additiveexpression        go to state 34
    multiplicativeexpression  go to state 23
    unaryexpression           go to state 24
    postfixexpression         go to state 25
    primaryexpression         go to state 26
    constant                  go to state 27


State 20

   26 constant: INTEGER •

    $default  reduce using rule 26 (constant)


State 21

   24 primaryexpression: IDENTIFIER •

    $default  reduce using rule 24 (primaryexpression)


State 22

    6 stmt: variable ASSIGN additiveexpression •
   10 additiveexpression: additiveexpression • ADD multiplicativeexpression
   11                   | additiveexpression • SUB multiplicativeexpression

    ADD  shift, and go to state 35
    SUB  shift, and go to state 36

    $default  reduce using rule 6 (stmt)


State 23

    9 additiveexpression: multiplicativeexpression •
   13 multiplicativeexpression: multiplicativeexpression • MUL unaryexpression
   14                         | multiplicativeexpression • DIV unaryexpression

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 9 (additiveexpression)


State 24

   12 multiplicativeexpression: unaryexpression •

    $default  reduce using rule 12 (multiplicativeexpression)


State 25

   15 unaryexpression: postfixexpression •
   21 postfixexpression: postfixexpression • INC
   22                  | postfixexpression • DEC

    INC  shift, and go to state 39
    DEC  shift, and go to state 40

    $default  reduce using rule 15 (unaryexpression)


State 26

   20 postfixexpression: primaryexpression •

    $default  reduce using rule 20 (postfixexpression)


State 27

   23 primaryexpression: constant •

    $default  reduce using rule 23 (primaryexpression)


State 28

    4 slist: error $@2 SEMICOLON slist •

    $default  reduce using rule 4 (slist)


State 29

    2 slist: stmt SEMICOLON $@1 slist •

    $default  reduce using rule 2 (slist)


State 30

   18 unaryexpression: ADD unaryexpression •

    $default  reduce using rule 18 (unaryexpression)


State 31

   19 unaryexpression: SUB unaryexpression •

    $default  reduce using rule 19 (unaryexpression)


State 32

   16 unaryexpression: INC unaryexpression •

    $default  reduce using rule 16 (unaryexpression)


State 33

   17 unaryexpression: DEC unaryexpression •

    $default  reduce using rule 17 (unaryexpression)


State 34

   10 additiveexpression: additiveexpression • ADD multiplicativeexpression
   11                   | additiveexpression • SUB multiplicativeexpression
   25 primaryexpression: LPAREN additiveexpression • RPAREN

    ADD     shift, and go to state 35
    SUB     shift, and go to state 36
    RPAREN  shift, and go to state 41


State 35

   10 additiveexpression: additiveexpression ADD • multiplicativeexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    multiplicativeexpression  go to state 42
    unaryexpression           go to state 24
    postfixexpression         go to state 25
    primaryexpression         go to state 26
    constant                  go to state 27


State 36

   11 additiveexpression: additiveexpression SUB • multiplicativeexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    multiplicativeexpression  go to state 43
    unaryexpression           go to state 24
    postfixexpression         go to state 25
    primaryexpression         go to state 26
    constant                  go to state 27


State 37

   13 multiplicativeexpression: multiplicativeexpression MUL • unaryexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    unaryexpression    go to state 44
    postfixexpression  go to state 25
    primaryexpression  go to state 26
    constant           go to state 27


State 38

   14 multiplicativeexpression: multiplicativeexpression DIV • unaryexpression

    ADD         shift, and go to state 15
    SUB         shift, and go to state 16
    INC         shift, and go to state 17
    DEC         shift, and go to state 18
    LPAREN      shift, and go to state 19
    INTEGER     shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    unaryexpression    go to state 45
    postfixexpression  go to state 25
    primaryexpression  go to state 26
    constant           go to state 27


State 39

   21 postfixexpression: postfixexpression INC •

    $default  reduce using rule 21 (postfixexpression)


State 40

   22 postfixexpression: postfixexpression DEC •

    $default  reduce using rule 22 (postfixexpression)


State 41

   25 primaryexpression: LPAREN additiveexpression RPAREN •

    $default  reduce using rule 25 (primaryexpression)


State 42

   10 additiveexpression: additiveexpression ADD multiplicativeexpression •
   13 multiplicativeexpression: multiplicativeexpression • MUL unaryexpression
   14                         | multiplicativeexpression • DIV unaryexpression

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 10 (additiveexpression)


State 43

   11 additiveexpression: additiveexpression SUB multiplicativeexpression •
   13 multiplicativeexpression: multiplicativeexpression • MUL unaryexpression
   14                         | multiplicativeexpression • DIV unaryexpression

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 11 (additiveexpression)


State 44

   13 multiplicativeexpression: multiplicativeexpression MUL unaryexpression •

    $default  reduce using rule 13 (multiplicativeexpression)


State 45

   14 multiplicativeexpression: multiplicativeexpression DIV unaryexpression •

    $default  reduce using rule 14 (multiplicativeexpression)
