Grammar

    0 $accept: S $end

    1 $@1: ε

    2 S: IFsl $@1 S

    3 $@2: ε

    4 S: SL $@2 S

    5 $@3: ε

    6 S: error $@3 S
    7  | ε

    8 SL: ST SEMICOLON

    9 IFsl: IFstmt
   10     | IFELSEstmt

   11 IFstmt: IF CONDTBLOCK STBLOCK

   12 CONDTBLOCK: LPAREN CONDT RPAREN

   13 STBLOCK: LBRACE S RBRACE

   14 IFELSEstmt: IFstmt ELSEstmt

   15 ELSEstmt: ELSE CONDTBLOCK STBLOCK

   16 CONDT: RELEXP
   17      | ANDEXP
   18      | OREXP

   19 ANDEXP: RELEXP AND CONDT

   20 OREXP: RELEXP OR CONDT

   21 RELEXP: VAR RELOP VARID

   22 RELOP: LT
   23      | GT
   24      | LTE
   25      | GTE
   26      | NEQ
   27      | EQ

   28 VARID: VAR
   29      | CONST

   30 ST: VAR ASSIGN ADDEXP
   31   | VAR INC
   32   | VAR DEC

   33 VAR: IDENTIFIER
   34    | LPAREN VAR RPAREN

   35 ADDEXP: MULEXP
   36       | ADDEXP ADD MULEXP
   37       | ADDEXP SUB MULEXP

   38 MULEXP: UEXP
   39       | MULEXP MUL UEXP
   40       | MULEXP DIV UEXP

   41 UEXP: POEXP
   42     | INC UEXP
   43     | DEC UEXP
   44     | ADD UEXP
   45     | SUB UEXP

   46 POEXP: PREXP
   47      | POEXP INC
   48      | POEXP DEC

   49 PREXP: CONST
   50      | IDENTIFIER
   51      | LPAREN ADDEXP RPAREN

   52 CONST: INTEGER


Terminals, with rules where they appear

    $end (0) 0
    error (256) 6
    ADD (258) 36 44
    SUB (259) 37 45
    MUL (260) 39
    DIV (261) 40
    INC (262) 31 42 47
    DEC (263) 32 43 48
    AND (264) 19
    OR (265) 20
    LT (266) 22
    GT (267) 23
    LTE (268) 24
    GTE (269) 25
    NEQ (270) 26
    EQ (271) 27
    ASSIGN (272) 30
    LPAREN (273) 12 34 51
    RPAREN (274) 12 34 51
    LBRACE (275) 13
    RBRACE (276) 13
    SEMICOLON (277) 8
    IF (278) 11
    ELSE (279) 15
    INTEGER <ival> (280) 52
    IDENTIFIER <lexeme> (281) 33 50


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    S <node> (28)
        on left: 2 4 6 7
        on right: 0 2 4 6 13
    $@1 (29)
        on left: 1
        on right: 2
    $@2 (30)
        on left: 3
        on right: 4
    $@3 (31)
        on left: 5
        on right: 6
    SL <node> (32)
        on left: 8
        on right: 4
    IFsl <node> (33)
        on left: 9 10
        on right: 2
    IFstmt <node> (34)
        on left: 11
        on right: 9 14
    CONDTBLOCK <node> (35)
        on left: 12
        on right: 11 15
    STBLOCK <node> (36)
        on left: 13
        on right: 11 15
    IFELSEstmt <node> (37)
        on left: 14
        on right: 10
    ELSEstmt <node> (38)
        on left: 15
        on right: 14
    CONDT <node> (39)
        on left: 16 17 18
        on right: 12 19 20
    ANDEXP <node> (40)
        on left: 19
        on right: 17
    OREXP <node> (41)
        on left: 20
        on right: 18
    RELEXP <node> (42)
        on left: 21
        on right: 16 19 20
    RELOP <node> (43)
        on left: 22 23 24 25 26 27
        on right: 21
    VARID <node> (44)
        on left: 28 29
        on right: 21
    ST <node> (45)
        on left: 30 31 32
        on right: 8
    VAR <node> (46)
        on left: 33 34
        on right: 21 28 30 31 32 34
    ADDEXP <node> (47)
        on left: 35 36 37
        on right: 30 36 37 51
    MULEXP <node> (48)
        on left: 38 39 40
        on right: 35 36 37 39 40
    UEXP <node> (49)
        on left: 41 42 43 44 45
        on right: 38 39 40 42 43 44 45
    POEXP <node> (50)
        on left: 46 47 48
        on right: 41 47 48
    PREXP <node> (51)
        on left: 49 50 51
        on right: 46
    CONST <node> (52)
        on left: 52
        on right: 29 49


State 0

    0 $accept: • S $end

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IF          shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $end  reduce using rule 7 (S)

    S           go to state 5
    SL          go to state 6
    IFsl        go to state 7
    IFstmt      go to state 8
    IFELSEstmt  go to state 9
    ST          go to state 10
    VAR         go to state 11


State 1

    6 S: error • $@3 S

    $default  reduce using rule 5 ($@3)

    $@3  go to state 12


State 2

   34 VAR: LPAREN • VAR RPAREN

    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 4

    VAR  go to state 13


State 3

   11 IFstmt: IF • CONDTBLOCK STBLOCK

    LPAREN  shift, and go to state 14

    CONDTBLOCK  go to state 15


State 4

   33 VAR: IDENTIFIER •

    $default  reduce using rule 33 (VAR)


State 5

    0 $accept: S • $end

    $end  shift, and go to state 16


State 6

    4 S: SL • $@2 S

    $default  reduce using rule 3 ($@2)

    $@2  go to state 17


State 7

    2 S: IFsl • $@1 S

    $default  reduce using rule 1 ($@1)

    $@1  go to state 18


State 8

    9 IFsl: IFstmt •
   14 IFELSEstmt: IFstmt • ELSEstmt

    ELSE  shift, and go to state 19

    $default  reduce using rule 9 (IFsl)

    ELSEstmt  go to state 20


State 9

   10 IFsl: IFELSEstmt •

    $default  reduce using rule 10 (IFsl)


State 10

    8 SL: ST • SEMICOLON

    SEMICOLON  shift, and go to state 21


State 11

   30 ST: VAR • ASSIGN ADDEXP
   31   | VAR • INC
   32   | VAR • DEC

    INC     shift, and go to state 22
    DEC     shift, and go to state 23
    ASSIGN  shift, and go to state 24


State 12

    6 S: error $@3 • S

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IF          shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $end    reduce using rule 7 (S)
    RBRACE  reduce using rule 7 (S)

    S           go to state 25
    SL          go to state 6
    IFsl        go to state 7
    IFstmt      go to state 8
    IFELSEstmt  go to state 9
    ST          go to state 10
    VAR         go to state 11


State 13

   34 VAR: LPAREN VAR • RPAREN

    RPAREN  shift, and go to state 26


State 14

   12 CONDTBLOCK: LPAREN • CONDT RPAREN

    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 4

    CONDT   go to state 27
    ANDEXP  go to state 28
    OREXP   go to state 29
    RELEXP  go to state 30
    VAR     go to state 31


State 15

   11 IFstmt: IF CONDTBLOCK • STBLOCK

    LBRACE  shift, and go to state 32

    STBLOCK  go to state 33


State 16

    0 $accept: S $end •

    $default  accept


State 17

    4 S: SL $@2 • S

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IF          shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $end    reduce using rule 7 (S)
    RBRACE  reduce using rule 7 (S)

    S           go to state 34
    SL          go to state 6
    IFsl        go to state 7
    IFstmt      go to state 8
    IFELSEstmt  go to state 9
    ST          go to state 10
    VAR         go to state 11


State 18

    2 S: IFsl $@1 • S

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IF          shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $end    reduce using rule 7 (S)
    RBRACE  reduce using rule 7 (S)

    S           go to state 35
    SL          go to state 6
    IFsl        go to state 7
    IFstmt      go to state 8
    IFELSEstmt  go to state 9
    ST          go to state 10
    VAR         go to state 11


State 19

   15 ELSEstmt: ELSE • CONDTBLOCK STBLOCK

    LPAREN  shift, and go to state 14

    CONDTBLOCK  go to state 36


State 20

   14 IFELSEstmt: IFstmt ELSEstmt •

    $default  reduce using rule 14 (IFELSEstmt)


State 21

    8 SL: ST SEMICOLON •

    $default  reduce using rule 8 (SL)


State 22

   31 ST: VAR INC •

    $default  reduce using rule 31 (ST)


State 23

   32 ST: VAR DEC •

    $default  reduce using rule 32 (ST)


State 24

   30 ST: VAR ASSIGN • ADDEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    ADDEXP  go to state 44
    MULEXP  go to state 45
    UEXP    go to state 46
    POEXP   go to state 47
    PREXP   go to state 48
    CONST   go to state 49


State 25

    6 S: error $@3 S •

    $default  reduce using rule 6 (S)


State 26

   34 VAR: LPAREN VAR RPAREN •

    $default  reduce using rule 34 (VAR)


State 27

   12 CONDTBLOCK: LPAREN CONDT • RPAREN

    RPAREN  shift, and go to state 50


State 28

   17 CONDT: ANDEXP •

    $default  reduce using rule 17 (CONDT)


State 29

   18 CONDT: OREXP •

    $default  reduce using rule 18 (CONDT)


State 30

   16 CONDT: RELEXP •
   19 ANDEXP: RELEXP • AND CONDT
   20 OREXP: RELEXP • OR CONDT

    AND  shift, and go to state 51
    OR   shift, and go to state 52

    $default  reduce using rule 16 (CONDT)


State 31

   21 RELEXP: VAR • RELOP VARID

    LT   shift, and go to state 53
    GT   shift, and go to state 54
    LTE  shift, and go to state 55
    GTE  shift, and go to state 56
    NEQ  shift, and go to state 57
    EQ   shift, and go to state 58

    RELOP  go to state 59


State 32

   13 STBLOCK: LBRACE • S RBRACE

    error       shift, and go to state 1
    LPAREN      shift, and go to state 2
    IF          shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    RBRACE  reduce using rule 7 (S)

    S           go to state 60
    SL          go to state 6
    IFsl        go to state 7
    IFstmt      go to state 8
    IFELSEstmt  go to state 9
    ST          go to state 10
    VAR         go to state 11


State 33

   11 IFstmt: IF CONDTBLOCK STBLOCK •

    $default  reduce using rule 11 (IFstmt)


State 34

    4 S: SL $@2 S •

    $default  reduce using rule 4 (S)


State 35

    2 S: IFsl $@1 S •

    $default  reduce using rule 2 (S)


State 36

   15 ELSEstmt: ELSE CONDTBLOCK • STBLOCK

    LBRACE  shift, and go to state 32

    STBLOCK  go to state 61


State 37

   44 UEXP: ADD • UEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    UEXP   go to state 62
    POEXP  go to state 47
    PREXP  go to state 48
    CONST  go to state 49


State 38

   45 UEXP: SUB • UEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    UEXP   go to state 63
    POEXP  go to state 47
    PREXP  go to state 48
    CONST  go to state 49


State 39

   42 UEXP: INC • UEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    UEXP   go to state 64
    POEXP  go to state 47
    PREXP  go to state 48
    CONST  go to state 49


State 40

   43 UEXP: DEC • UEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    UEXP   go to state 65
    POEXP  go to state 47
    PREXP  go to state 48
    CONST  go to state 49


State 41

   51 PREXP: LPAREN • ADDEXP RPAREN

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    ADDEXP  go to state 66
    MULEXP  go to state 45
    UEXP    go to state 46
    POEXP   go to state 47
    PREXP   go to state 48
    CONST   go to state 49


State 42

   52 CONST: INTEGER •

    $default  reduce using rule 52 (CONST)


State 43

   50 PREXP: IDENTIFIER •

    $default  reduce using rule 50 (PREXP)


State 44

   30 ST: VAR ASSIGN ADDEXP •
   36 ADDEXP: ADDEXP • ADD MULEXP
   37       | ADDEXP • SUB MULEXP

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 30 (ST)


State 45

   35 ADDEXP: MULEXP •
   39 MULEXP: MULEXP • MUL UEXP
   40       | MULEXP • DIV UEXP

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70

    $default  reduce using rule 35 (ADDEXP)


State 46

   38 MULEXP: UEXP •

    $default  reduce using rule 38 (MULEXP)


State 47

   41 UEXP: POEXP •
   47 POEXP: POEXP • INC
   48      | POEXP • DEC

    INC  shift, and go to state 71
    DEC  shift, and go to state 72

    $default  reduce using rule 41 (UEXP)


State 48

   46 POEXP: PREXP •

    $default  reduce using rule 46 (POEXP)


State 49

   49 PREXP: CONST •

    $default  reduce using rule 49 (PREXP)


State 50

   12 CONDTBLOCK: LPAREN CONDT RPAREN •

    $default  reduce using rule 12 (CONDTBLOCK)


State 51

   19 ANDEXP: RELEXP AND • CONDT

    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 4

    CONDT   go to state 73
    ANDEXP  go to state 28
    OREXP   go to state 29
    RELEXP  go to state 30
    VAR     go to state 31


State 52

   20 OREXP: RELEXP OR • CONDT

    LPAREN      shift, and go to state 2
    IDENTIFIER  shift, and go to state 4

    CONDT   go to state 74
    ANDEXP  go to state 28
    OREXP   go to state 29
    RELEXP  go to state 30
    VAR     go to state 31


State 53

   22 RELOP: LT •

    $default  reduce using rule 22 (RELOP)


State 54

   23 RELOP: GT •

    $default  reduce using rule 23 (RELOP)


State 55

   24 RELOP: LTE •

    $default  reduce using rule 24 (RELOP)


State 56

   25 RELOP: GTE •

    $default  reduce using rule 25 (RELOP)


State 57

   26 RELOP: NEQ •

    $default  reduce using rule 26 (RELOP)


State 58

   27 RELOP: EQ •

    $default  reduce using rule 27 (RELOP)


State 59

   21 RELEXP: VAR RELOP • VARID

    LPAREN      shift, and go to state 2
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 4

    VARID  go to state 75
    VAR    go to state 76
    CONST  go to state 77


State 60

   13 STBLOCK: LBRACE S • RBRACE

    RBRACE  shift, and go to state 78


State 61

   15 ELSEstmt: ELSE CONDTBLOCK STBLOCK •

    $default  reduce using rule 15 (ELSEstmt)


State 62

   44 UEXP: ADD UEXP •

    $default  reduce using rule 44 (UEXP)


State 63

   45 UEXP: SUB UEXP •

    $default  reduce using rule 45 (UEXP)


State 64

   42 UEXP: INC UEXP •

    $default  reduce using rule 42 (UEXP)


State 65

   43 UEXP: DEC UEXP •

    $default  reduce using rule 43 (UEXP)


State 66

   36 ADDEXP: ADDEXP • ADD MULEXP
   37       | ADDEXP • SUB MULEXP
   51 PREXP: LPAREN ADDEXP • RPAREN

    ADD     shift, and go to state 67
    SUB     shift, and go to state 68
    RPAREN  shift, and go to state 79


State 67

   36 ADDEXP: ADDEXP ADD • MULEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    MULEXP  go to state 80
    UEXP    go to state 46
    POEXP   go to state 47
    PREXP   go to state 48
    CONST   go to state 49


State 68

   37 ADDEXP: ADDEXP SUB • MULEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    MULEXP  go to state 81
    UEXP    go to state 46
    POEXP   go to state 47
    PREXP   go to state 48
    CONST   go to state 49


State 69

   39 MULEXP: MULEXP MUL • UEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    UEXP   go to state 82
    POEXP  go to state 47
    PREXP  go to state 48
    CONST  go to state 49


State 70

   40 MULEXP: MULEXP DIV • UEXP

    ADD         shift, and go to state 37
    SUB         shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    INTEGER     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43

    UEXP   go to state 83
    POEXP  go to state 47
    PREXP  go to state 48
    CONST  go to state 49


State 71

   47 POEXP: POEXP INC •

    $default  reduce using rule 47 (POEXP)


State 72

   48 POEXP: POEXP DEC •

    $default  reduce using rule 48 (POEXP)


State 73

   19 ANDEXP: RELEXP AND CONDT •

    $default  reduce using rule 19 (ANDEXP)


State 74

   20 OREXP: RELEXP OR CONDT •

    $default  reduce using rule 20 (OREXP)


State 75

   21 RELEXP: VAR RELOP VARID •

    $default  reduce using rule 21 (RELEXP)


State 76

   28 VARID: VAR •

    $default  reduce using rule 28 (VARID)


State 77

   29 VARID: CONST •

    $default  reduce using rule 29 (VARID)


State 78

   13 STBLOCK: LBRACE S RBRACE •

    $default  reduce using rule 13 (STBLOCK)


State 79

   51 PREXP: LPAREN ADDEXP RPAREN •

    $default  reduce using rule 51 (PREXP)


State 80

   36 ADDEXP: ADDEXP ADD MULEXP •
   39 MULEXP: MULEXP • MUL UEXP
   40       | MULEXP • DIV UEXP

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70

    $default  reduce using rule 36 (ADDEXP)


State 81

   37 ADDEXP: ADDEXP SUB MULEXP •
   39 MULEXP: MULEXP • MUL UEXP
   40       | MULEXP • DIV UEXP

    MUL  shift, and go to state 69
    DIV  shift, and go to state 70

    $default  reduce using rule 37 (ADDEXP)


State 82

   39 MULEXP: MULEXP MUL UEXP •

    $default  reduce using rule 39 (MULEXP)


State 83

   40 MULEXP: MULEXP DIV UEXP •

    $default  reduce using rule 40 (MULEXP)
